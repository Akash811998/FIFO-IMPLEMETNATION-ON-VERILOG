|lab3
CLOCK_50 => CLOCK_50.IN3
SW[0] => data_in[0].DATAIN
SW[1] => data_in[1].DATAIN
SW[2] => data_in[2].DATAIN
SW[3] => data_in[3].DATAIN
SW[4] => data_in[4].DATAIN
SW[5] => data_in[5].DATAIN
SW[6] => data_in[6].DATAIN
SW[7] => data_in[7].DATAIN
SW[8] => data_in[8].DATAIN
SW[9] => mode.DATAIN
KEY[0] => pre_reset.DATAIN
KEY[1] => pre_clear.DATAIN
KEY[2] => _.IN1
KEY[3] => _.IN1
LEDR[0] <= LEDR.DB_MAX_OUTPUT_PORT_TYPE
LEDR[1] <= LEDR.DB_MAX_OUTPUT_PORT_TYPE
LEDR[2] <= LEDR.DB_MAX_OUTPUT_PORT_TYPE
LEDR[3] <= LEDR.DB_MAX_OUTPUT_PORT_TYPE
LEDR[4] <= LEDR.DB_MAX_OUTPUT_PORT_TYPE
LEDR[5] <= LEDR.DB_MAX_OUTPUT_PORT_TYPE
LEDR[6] <= LEDR.DB_MAX_OUTPUT_PORT_TYPE
LEDR[7] <= LEDR.DB_MAX_OUTPUT_PORT_TYPE
LEDR[8] <= LEDR.DB_MAX_OUTPUT_PORT_TYPE
LEDR[9] <= mode.DB_MAX_OUTPUT_PORT_TYPE
HEX0[0] <= decTo7:hexa.port1
HEX0[1] <= decTo7:hexa.port1
HEX0[2] <= decTo7:hexa.port1
HEX0[3] <= decTo7:hexa.port1
HEX0[4] <= decTo7:hexa.port1
HEX0[5] <= decTo7:hexa.port1
HEX0[6] <= decTo7:hexa.port1


|lab3|edge_detector:read_edge
in => out.IN1
in => del_in.DATAIN
clk => del_in.CLK
out <= out.DB_MAX_OUTPUT_PORT_TYPE


|lab3|edge_detector:write_edge
in => out.IN1
in => del_in.DATAIN
clk => del_in.CLK
out <= out.DB_MAX_OUTPUT_PORT_TYPE


|lab3|FF:fifo_1
clk => stack.we_a.CLK
clk => stack.waddr_a[3].CLK
clk => stack.waddr_a[2].CLK
clk => stack.waddr_a[1].CLK
clk => stack.waddr_a[0].CLK
clk => stack.data_a[8].CLK
clk => stack.data_a[7].CLK
clk => stack.data_a[6].CLK
clk => stack.data_a[5].CLK
clk => stack.data_a[4].CLK
clk => stack.data_a[3].CLK
clk => stack.data_a[2].CLK
clk => stack.data_a[1].CLK
clk => stack.data_a[0].CLK
clk => rd_data[0]~reg0.CLK
clk => rd_data[1]~reg0.CLK
clk => rd_data[2]~reg0.CLK
clk => rd_data[3]~reg0.CLK
clk => rd_data[4]~reg0.CLK
clk => rd_data[5]~reg0.CLK
clk => rd_data[6]~reg0.CLK
clk => rd_data[7]~reg0.CLK
clk => rd_data[8]~reg0.CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => overflow~reg0.CLK
clk => rd_index[0]~reg0.CLK
clk => rd_index[1]~reg0.CLK
clk => rd_index[2]~reg0.CLK
clk => rd_index[3]~reg0.CLK
clk => wr_index[0]~reg0.CLK
clk => wr_index[1]~reg0.CLK
clk => wr_index[2]~reg0.CLK
clk => wr_index[3]~reg0.CLK
clk => stack.CLK0
reset => wr_index.OUTPUTSELECT
reset => wr_index.OUTPUTSELECT
reset => wr_index.OUTPUTSELECT
reset => wr_index.OUTPUTSELECT
reset => rd_index.OUTPUTSELECT
reset => rd_index.OUTPUTSELECT
reset => rd_index.OUTPUTSELECT
reset => rd_index.OUTPUTSELECT
reset => overflow.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => counter.OUTPUTSELECT
reset => stack.OUTPUTSELECT
reset => rd_data[0]~reg0.ENA
reset => rd_data[1]~reg0.ENA
reset => rd_data[2]~reg0.ENA
reset => rd_data[3]~reg0.ENA
reset => rd_data[4]~reg0.ENA
reset => rd_data[5]~reg0.ENA
reset => rd_data[6]~reg0.ENA
reset => rd_data[7]~reg0.ENA
reset => rd_data[8]~reg0.ENA
wr_data[0] => stack.data_a[0].DATAIN
wr_data[0] => stack.DATAIN
wr_data[1] => stack.data_a[1].DATAIN
wr_data[1] => stack.DATAIN1
wr_data[2] => stack.data_a[2].DATAIN
wr_data[2] => stack.DATAIN2
wr_data[3] => stack.data_a[3].DATAIN
wr_data[3] => stack.DATAIN3
wr_data[4] => stack.data_a[4].DATAIN
wr_data[4] => stack.DATAIN4
wr_data[5] => stack.data_a[5].DATAIN
wr_data[5] => stack.DATAIN5
wr_data[6] => stack.data_a[6].DATAIN
wr_data[6] => stack.DATAIN6
wr_data[7] => stack.data_a[7].DATAIN
wr_data[7] => stack.DATAIN7
wr_data[8] => stack.data_a[8].DATAIN
wr_data[8] => stack.DATAIN8
wr_request => stack.OUTPUTSELECT
wr_request => counter.OUTPUTSELECT
wr_request => counter.OUTPUTSELECT
wr_request => counter.OUTPUTSELECT
wr_request => counter.OUTPUTSELECT
wr_request => counter.OUTPUTSELECT
wr_request => wr_index.OUTPUTSELECT
wr_request => wr_index.OUTPUTSELECT
wr_request => wr_index.OUTPUTSELECT
wr_request => wr_index.OUTPUTSELECT
wr_request => overflow.OUTPUTSELECT
wr_request => rd_data.OUTPUTSELECT
wr_request => rd_data.OUTPUTSELECT
wr_request => rd_data.OUTPUTSELECT
wr_request => rd_data.OUTPUTSELECT
wr_request => rd_data.OUTPUTSELECT
wr_request => rd_data.OUTPUTSELECT
wr_request => rd_data.OUTPUTSELECT
wr_request => rd_data.OUTPUTSELECT
wr_request => rd_data.OUTPUTSELECT
wr_request => rd_index.OUTPUTSELECT
wr_request => rd_index.OUTPUTSELECT
wr_request => rd_index.OUTPUTSELECT
wr_request => rd_index.OUTPUTSELECT
rd_data[0] <= rd_data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rd_data[1] <= rd_data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rd_data[2] <= rd_data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rd_data[3] <= rd_data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rd_data[4] <= rd_data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rd_data[5] <= rd_data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rd_data[6] <= rd_data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rd_data[7] <= rd_data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rd_data[8] <= rd_data[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rd_request => always0.IN1
empty <= Equal1.DB_MAX_OUTPUT_PORT_TYPE
full <= full.DB_MAX_OUTPUT_PORT_TYPE
overflow <= overflow~reg0.DB_MAX_OUTPUT_PORT_TYPE
clear_overflow_request => always0.IN1
wr_index[0] <= wr_index[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
wr_index[1] <= wr_index[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
wr_index[2] <= wr_index[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
wr_index[3] <= wr_index[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rd_index[0] <= rd_index[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rd_index[1] <= rd_index[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rd_index[2] <= rd_index[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rd_index[3] <= rd_index[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|lab3|decTo7:hexa
in[0] => Decoder0.IN3
in[1] => Decoder0.IN2
in[2] => Decoder0.IN1
in[3] => Decoder0.IN0
out[0] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= out.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= out.DB_MAX_OUTPUT_PORT_TYPE


